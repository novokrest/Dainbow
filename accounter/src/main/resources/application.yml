server:
  port: 30005

flyway:
  locations: sql

account-schema:
  users-by-username: SELECT username, password, enabled FROM account WHERE username = ?
  authorities-by-username: SELECT username, role FROM account_role WHERE username = ?

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/test_accounter_db?useSSL=false
    username: root
    password: 123
  output:
    ansi:
      enabled: ALWAYS

security:
  user:
    password: 123
  oauth2:
    client:
      client-id: ui_B429F95CB6DA4C648434B26BE4230827
      client-secret: a~o!=.+?}sMn[<Q
      authorized-grant-types: authorization_code, refresh_token, password
      scope: read, write
      auto-approve-scopes: '.*'

oauth2:
  google:
    loginUrl: /login/google
    client:
      clientId: 1069112770187-86kp601ddg7bt7m4kvf1s6pokmienrob.apps.googleusercontent.com
      clientSecret: tH-1KPwe3Q7LgXwdd_qVJTA_
      userAuthorizationUri: https://accounts.google.com/o/oauth2/v2/auth
      accessTokenUri: https://www.googleapis.com/oauth2/v4/token
      scope: https://www.googleapis.com/auth/userinfo.profile
      authenticationScheme: query
      clientAuthenticationScheme: form
    resource:
      userInfoUri: https://www.googleapis.com/oauth2/v1/userinfo?alt=json

logging:
  level:
    org.springframework.security: DEBUG
